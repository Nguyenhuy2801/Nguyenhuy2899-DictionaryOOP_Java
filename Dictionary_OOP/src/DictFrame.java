
import com.darkprograms.speech.synthesiser.Synthesiser;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import java.lang.*;
import java.util.Collection;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.advanced.AdvancedPlayer;
/**
 *
 * @author nguyenhuy
 */
public class DictFrame extends javax.swing.JFrame {
    DictionaryCommandline dict = new DictionaryCommandline();
    DefaultListModel<String> dlm = new DefaultListModel<>();
    DefaultListModel<String> hl = new DefaultListModel<>();
    /**
     * Creates new form DictFrame
     * @throws java.io.FileNotFoundException
     */
    public DictFrame() throws FileNotFoundException {
        initComponents();
        
        AddButton.setVisible(false);
        ExplainText.setVisible(false);
        
        this.setLocationRelativeTo(null);
        dict.dictionaryAdvanced();
        for (Word ele : Dictionary.container) {
            dlm.addElement(ele.getWordTarget());
        }
        TargetList.setModel(dlm);    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        HistoryButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TargetList = new javax.swing.JList<>();
        Speak1 = new javax.swing.JButton();
        Speak2 = new javax.swing.JButton();
        TargetText = new javax.swing.JTextField();
        ExplainText = new javax.swing.JTextField();
        ExplainLable = new javax.swing.JLabel();
        TranButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        AddButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        DeleButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        TranMenu = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        ThemTu = new javax.swing.JMenuItem();
        ChangeMenu = new javax.swing.JMenu();
        ChangMenu = new javax.swing.JMenuItem();
        RemoveMenu = new javax.swing.JMenu();
        DeleWord = new javax.swing.JMenuItem();
        HistoryMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        DeleHistory = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        OutMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        HistoryButton.setText("History");
        HistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HistoryButtonActionPerformed(evt);
            }
        });
        jPanel1.add(HistoryButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, -1, -1));

        TargetList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TargetList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TargetListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TargetList);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 220, 220, 280));

        Speak1.setText("Speak1");
        Speak1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Speak1ActionPerformed(evt);
            }
        });
        jPanel1.add(Speak1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, -1, -1));

        Speak2.setText("Speak2");
        Speak2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Speak2ActionPerformed(evt);
            }
        });
        jPanel1.add(Speak2, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 40, -1, -1));

        TargetText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TargetText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TargetTextActionPerformed(evt);
            }
        });
        TargetText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TargetTextKeyReleased(evt);
            }
        });
        jPanel1.add(TargetText, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 69, 330, 108));

        ExplainText.setText("Explain");
        jPanel1.add(ExplainText, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 200, 310, 108));

        ExplainLable.setBackground(new java.awt.Color(255, 255, 255));
        ExplainLable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ExplainLable.setOpaque(true);
        jPanel1.add(ExplainLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 69, 310, 108));

        TranButton.setText("Translate");
        TranButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TranButtonActionPerformed(evt);
            }
        });
        jPanel1.add(TranButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 112, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Tiếng Anh");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 90, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Tiếng Việt");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, -1, -1));

        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AddButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 190, -1, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("jLabel3");
        jLabel3.setOpaque(true);
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 350, 310, 110));

        DeleButton.setText("Dele");
        DeleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleButtonActionPerformed(evt);
            }
        });
        jPanel1.add(DeleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 260, 70, 40));

        TranMenu.setText("Tra từ");

        jMenuItem2.setText("jMenuItem2");
        TranMenu.add(jMenuItem2);

        jMenuBar1.add(TranMenu);

        jMenu1.setText("Thêm từ");

        ThemTu.setText("Thêm từ mới");
        ThemTu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemTuActionPerformed(evt);
            }
        });
        jMenu1.add(ThemTu);

        jMenuBar1.add(jMenu1);

        ChangeMenu.setText("Sửa từ");

        ChangMenu.setText("Sửa từ");
        ChangeMenu.add(ChangMenu);

        jMenuBar1.add(ChangeMenu);

        RemoveMenu.setText("Xóa từ");

        DeleWord.setText("Xóa từ");
        RemoveMenu.add(DeleWord);

        jMenuBar1.add(RemoveMenu);

        HistoryMenu.setText("Lịch sử ");

        jMenuItem1.setText("Xem lịch sử");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        HistoryMenu.add(jMenuItem1);

        DeleHistory.setText("Xóa lịch sử");
        DeleHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleHistoryActionPerformed(evt);
            }
        });
        HistoryMenu.add(DeleHistory);

        jMenuBar1.add(HistoryMenu);

        jMenu2.setText("Thoát ");

        OutMenu.setText("Thoát");
        OutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutMenuActionPerformed(evt);
            }
        });
        jMenu2.add(OutMenu);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TargetTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TargetTextActionPerformed
        
        // TODO add your handling code here:
    }//GEN-LAST:event_TargetTextActionPerformed

    private void TargetListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TargetListMouseClicked
        TargetText.setText(TargetList.getSelectedValue());
        ExplainLable.setText(dict.binaryLookup(TargetList.getSelectedValue(), 0, Dictionary.container.size() - 1));
    }//GEN-LAST:event_TargetListMouseClicked

    private void TargetTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TargetTextKeyReleased
        if (TargetText.getText().equals("")) {
            dlm.clear();
            Dictionary.container.forEach((ele) -> {
                dlm.addElement(ele.getWordTarget());
            });
            TargetList.setModel(dlm);
        } else {
            dlm.clear();
            Dictionary.container.forEach((word) -> {
                if (!word.getWordTarget().contains(TargetText.getText().toLowerCase())) {
                } else {
                    dlm.addElement(word.getWordTarget());
                }
            });
            TargetList.setModel(dlm);
        }
    }//GEN-LAST:event_TargetTextKeyReleased

    private void Speak1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Speak1ActionPerformed
        if (TargetText.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "chọn một từ");
        } else {
            Synthesiser synthesiser = new Synthesiser();
            Thread thread = new Thread(() -> {
                try {
                    AdvancedPlayer player = new AdvancedPlayer(synthesiser.getMP3Data(TargetText.getText()));
                    player.play();
                } catch (IOException | JavaLayerException e) {
                    JOptionPane.showMessageDialog(rootPane, "Vui lòng kết nối mạng");
                }
            });

            thread.setDaemon(false);
            thread.start();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_Speak1ActionPerformed

    private void Speak2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Speak2ActionPerformed
        if (ExplainLable.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "chọn một từ");
        } else {
            Synthesiser synthesiser = new Synthesiser();
            Thread thread = new Thread(() -> {
                try {
                    AdvancedPlayer player = new AdvancedPlayer(synthesiser.getMP3Data(ExplainLable.getText()));
                    player.play();
                } catch (IOException | JavaLayerException e) {
                    JOptionPane.showMessageDialog(rootPane, "Vui lòng kết nối mạng");
                }
            });

            thread.setDaemon(false);
            thread.start();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_Speak2ActionPerformed

    private void TranButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TranButtonActionPerformed
        if (!TargetText.getText().equals("")) {
            try {
            ExplainLable.setText(GoogleTranslate.translate("vi",TargetText.getText()));
            // TODO add your handling code here:
        } catch (IOException ex) {
            ExplainLable.setText(dict.binaryLookup(TargetText.getText(), 0, Dictionary.container.size() - 1));
            JOptionPane.showMessageDialog(rootPane,"Vui lòng kết nối mạng");
        }    
            for(int i = 0; i < hl.size(); i++){
                if(hl.get(i).equals(TargetText.getText())){
                    hl.remove(i);
                    break;
                }
            }
            hl.addElement(TargetText.getText());
        }
        else{
            JOptionPane.showMessageDialog(rootPane,"Vui lòng nhập từ");
        }
    }//GEN-LAST:event_TranButtonActionPerformed

    private void HistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HistoryButtonActionPerformed
       if(hl.isEmpty()){
           JOptionPane.showMessageDialog(rootPane, "Lịch sử rỗng");
       }
       else{
        TargetList.setModel(hl);
       }
    }//GEN-LAST:event_HistoryButtonActionPerformed

    private void DeleHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleHistoryActionPerformed
        int click = JOptionPane.showConfirmDialog(null, "Bạn muôn xóa từ toàn bộ lịch sử");
            if (click == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(null, "Đã xóa");
                hl.clear();
            } else if (click == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(null, "Không xóa");
            }
    }//GEN-LAST:event_DeleHistoryActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if(hl.isEmpty()){
           JOptionPane.showMessageDialog(rootPane, "Lịch sử rỗng");
       }
       else{
        TargetList.setModel(hl);
       }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ThemTuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemTuActionPerformed
        TranButton.setVisible(false);
        ExplainLable.setVisible(false);
        AddButton.setVisible(true);
        ExplainText.setVisible(true);
    }//GEN-LAST:event_ThemTuActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        if(!TargetText.getText().equals("") && !ExplainText.getText().equals("")){
            if (dict.binarySeach(TargetText.getText(), 0, Dictionary.container.size() - 1)) {
                JOptionPane.showMessageDialog(null, "Từ này đã có trong từ điển");
            }
            else{
                dict.insertSingleWordFromCommanline(TargetText.getText(), ExplainText.getText());
                JOptionPane.showMessageDialog(rootPane, "Bạn vừa thêm từ " + TargetText.getText());
            }       
        }
        else{
            JOptionPane.showMessageDialog(rootPane,"Yêu cầu nhập đủ cả từ và nghĩa");
        }
    }//GEN-LAST:event_AddButtonActionPerformed

    private void DeleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleButtonActionPerformed
        if (!dict.binarySeach(TargetText.getText(), 0, Dictionary.container.size() - 1)) {
            JOptionPane.showMessageDialog(null, "Từ này không có trong từ điển");
        } else {
            int click = JOptionPane.showConfirmDialog(null, "Bạn muôn xóa từ " + TargetText.getText());
            if (click == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(null, "Xóa từ " + TargetText.getText() + " khỏi từ điển");
                dict.removeSingleWordFromCommanline(TargetText.getText());
                TargetText.setText("");
                ExplainLable.setText("");
            } else if (click == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(null, "Không xóa");
            }
        }
    }//GEN-LAST:event_DeleButtonActionPerformed

    private void OutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutMenuActionPerformed
        try {
            dict.dictionaryExportToFile();
        } catch (IOException ex) {
            Logger.getLogger(DictFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);
    }//GEN-LAST:event_OutMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DictFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DictFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DictFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DictFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DictFrame().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(DictFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JMenuItem ChangMenu;
    private javax.swing.JMenu ChangeMenu;
    private javax.swing.JButton DeleButton;
    private javax.swing.JMenuItem DeleHistory;
    private javax.swing.JMenuItem DeleWord;
    private javax.swing.JLabel ExplainLable;
    private javax.swing.JTextField ExplainText;
    private javax.swing.JButton HistoryButton;
    private javax.swing.JMenu HistoryMenu;
    private javax.swing.JMenuItem OutMenu;
    private javax.swing.JMenu RemoveMenu;
    private javax.swing.JButton Speak1;
    private javax.swing.JButton Speak2;
    private javax.swing.JList<String> TargetList;
    private javax.swing.JTextField TargetText;
    private javax.swing.JMenuItem ThemTu;
    private javax.swing.JButton TranButton;
    private javax.swing.JMenu TranMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
